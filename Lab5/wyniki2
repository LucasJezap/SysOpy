Ponizej wyniki dzialania programu rozwiazujacego problem producenta i konsumenta.

-----------------------------------------------------------------------------------
                        Test dzialania w dwoch terminalach
-----------------------------------------------------------------------------------
        Przyklad produktu : ala ma kota a kot ma ale i jest bardzo fajnie
-----------------------------------------------------------------------------------
                                Komendy: 
-----------------------------------------------------------------------------------
mkfifo fifo
./producer fifo goods 5
./consumer fifo wyniki 3
-----------------------------------------------------------------------------------
                                Wynik:
-----------------------------------------------------------------------------------
#12617#ala m
#12617#a kot
#12617#a a k
#12617#ot ma
#12617# ale 
#12617#i jes
#12617#t bar
#12617#dzo f
#12617#ajnie
-----------------------------------------------------------------------------------
Po odkodowaniu: ala ma kota a kot ma ale i jest bardzo fajnie
-----------------------------------------------------------------------------------
                Test jednego konsumenta i wielu producentow
-----------------------------------------------------------------------------------
Przeprowadzilem test dany w specyfikacji zadania polegajacy na jednoczesnym
dzialaniu wielu producentow oraz jednego konsumenta odczytujacego dane z potoku
nazwanego. Pliki, ktorych uzylem do testow dane sa w folderze tests w zad2. Nasz
konsument odczytuje dane z potoku a jesli chwilowo zadnych danych nie ma to pozostaje
w uspieniu. 5 producentow daje swoje 'produkty' rownolegle do potoku, z ktorego 
konsument te 'produkty' odbiera. Oczywiscie produkty zakleszczajac sie, konsument
odbiera produkty w nieokreslonej kolejnosci od producentow. Wazne jednak, ze zaden
produkt sie nie gubi. Jest to mozliwe tylko wtedy jesli proces chce zapisac dane o 
dlugosci nie wiekszej niz stala PIPE_BUF. W momencie przekroczenia danej stalej 
wieloprocesowe zapisy nie sa bezpieczne. W moim przykladzie zapisy byly wielkosci
10-20 wiec zaden problem nie nastapil. Ponizej pokazane dzialanie programu.
-----------------------------------------------------------------------------------
                                    Dane:
-----------------------------------------------------------------------------------
test1: AaAaAaAaAaAaAaAaAaAaAaAaA
test2: 1234512345123451234512345
test3: $$$$$$$$$$$$$$$$$$$$$$$$$
test4: SYSOPY_SYSOPY_SYSOPY_SYSO
test5: FIFOfifoFIFOfifoFIFOfifoF
-----------------------------------------------------------------------------------
                                    Wyniki:
-----------------------------------------------------------------------------------
#14011#FIFOf
#14010#SYSOP
#14009#$$$$$
#14008#12345
#14007#AaAaA
#14009#$$$$$
#14010#Y_SYS
#14011#ifoFI
#14007#aAaAa
#14008#12345
#14010#OPY_S
#14011#FOfif
#14009#$$$$$
#14007#AaAaA
#14008#12345
#14011#oFIFO
#14009#$$$$$
#14010#YSOPY
#14007#aAaAa
#14008#12345
#14011#fifoF
#14009#$$$$$
#14010#_SYSO
#14007#AaAaA
#14008#12345
-----------------------------------------------------------------------------------
                        Wyniki przy uzyciu grep'a
-----------------------------------------------------------------------------------
cat results | grep 14007

#14007#AaAaA
#14007#aAaAa
#14007#AaAaA
#14007#aAaAa
#14007#AaAaA
-----------------------------------------------------------------------------------
cat results | grep 14008

#14008#12345
#14008#12345
#14008#12345
#14008#12345
#14008#12345
-----------------------------------------------------------------------------------
cat results | grep 14009

#14009#$$$$$
#14009#$$$$$
#14009#$$$$$
#14009#$$$$$
#14009#$$$$$
-----------------------------------------------------------------------------------
cat results | grep 14010

#14010#SYSOP
#14010#Y_SYS
#14010#OPY_S
#14010#YSOPY
#14010#_SYSO
-----------------------------------------------------------------------------------
cat results | grep 14011

#14011#FIFOf
#14011#ifoFI
#14011#FOfif
#14011#oFIFO
#14011#fifoF
-----------------------------------------------------------------------------------
                                Wnioski:
-----------------------------------------------------------------------------------
Jak widac, zadne dane sie nie zgubily wiec problem producenta i konsumenta zostal
zaimplementowany poprawnie. Ilosc procesow jednoczesnie zapisujacych swoje produkty
nie robi zadnego problemu, poki zapisy sa atomowe, czyli ich dlugosc nie przekracza
stalej PIPE_BUF.